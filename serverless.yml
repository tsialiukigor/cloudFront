service: static-app-template

frameworkVersion: '2'

plugins:
  - serverless-finch
  - serverless-single-page-app-plugin

custom:
  client:
    bucketName: static-app-template
    distributionFolder: client
  s3LocalPath: ${self:custom.client.distributionFolder}/
  s3BucketName: ${self:custom.client.bucketName}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1

resources:
  Resources:
    StaticApp:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3BucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    StaticAppBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref StaticApp
        PolicyDocument:
          Id: StaticAppBucketPolicy
          Version: '2012-10-17'
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: arn:aws:s3:::${self:custom.s3BucketName}/*
    OriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Access identity between CloudFront and S3 bucket
    StaticAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.s3BucketName}.s3.amazonaws.com
              Id: ${self:custom.client.bucketName}
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
          Enabled: true
          IPV6Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods: ['GET', 'HEAD', 'OPTIONS']
            CachedMethods: ['GET', 'HEAD', 'OPTIONS']
            ForwardedValues:
              Headers:
                - Access-Control-Request-Headers
                - Access-Control-Request-Method
                - Origin
                - Authorization
              QueryString: false
              Cookies:
                Forward: none
            TargetOriginId: ${self:custom.client.bucketName}
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            DefaultTTL: 0
          ViewerCertificate:
            CloudFrontDefaultCertificate: 'true'
